import pytestfrom src.item import Itemclass TestItem:    def test_size_when_called_with_valid_size_calculates_correct_max_width(self):        item = Item('300x400-100x250', '', '', '', None)        result = item.max_width        assert result == 300    def test_size_when_called_with_valid_size_calculates_correct_max_height(self):        item = Item('300x400-100x250', '', '', '', None)        result = item.max_height        assert result == 400    def test_size_when_called_with_valid_size_returns_correct_size(self):        item = Item('300x400-100x250', '', '', '', None)        result = item.size        assert result == [('300', '400'), ('100', '250')]    def test_size_when_called_with_more_than_two_sizes_returns_correct_default_value(self):        item = Item('300x400-100x250-340x345', '', '', '', None)        result = item.size        assert result == [('300', '400'), ('100', '250'), ('340', '345')]    def test_size_when_called_with_incorrect_size_format_raises_value_error(self):        item = Item('300.400-100x25', '', '', '', None)        with pytest.raises(ValueError) as e:            assert item.size        assert str(e.value) == "Invalid size string provided."    def test_boq_area_when_called_with_zero_area_size_returns_surface_area(self):        item = Item('300x400-100x250', '', '0', '2345', None)        result = item.boq_area        assert result == 2345    def test_boq_area_when_called_with_zero_surface_area_size_returns_area(self):        item = Item('300x400-100x250', '', '2345', '', None)        result = item.boq_area        assert result == 2345