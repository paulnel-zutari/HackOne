import pandasimport pandas as pdclass RowFilter:    def filter(self, data: pandas.DataFrame, insulation_none=True, header=True, has_nan=True):        if insulation_none:            data = self._insulation_none_filter(data)        if header:            data = self._header_filter(data)        if has_nan:            data = self._nan_row_filter(data)        return data    def _insulation_none_filter(self, data: pandas.DataFrame):        coloumn = "Insulation Type"        if coloumn in data.columns:            return data[data[coloumn].astype(str) != "None"]        return data    def _header_filter(self, data: pandas.DataFrame):        return data.iloc[1:, :]    def _nan_row_filter(self, data: pandas.DataFrame):        data = data.dropna(how="any")        return dataclass ColoumnFilter:    def filter(self, data: pandas.DataFrame, header=True):        data = self._col_selection_filter(data)        # data = self._nan_coloumn_filter(data)        return data    def _col_selection_filter(self, data: pandas.DataFrame):        coloumns = ["Size", "Count", "Area", "Surface Area"]        if not self._is_present_columns(coloumns, data):            return data        return data[coloumns]    def _nan_coloumn_filter(self, data: pd.DataFrame, header=True):        if header:            data = data.iloc[1:, :].dropna(axis=1, how='all')        else:            data = data.dropna(axis=1, how='all')        return data    def _is_present_columns(self, coloumns, data: pd.DataFrame):        for coloumn in coloumns:            if coloumn not in data.columns:                return False        return True