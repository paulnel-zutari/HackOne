from src.item import Itemclass Boq:    def __init__(self, data, rates, categoriser):        self._data = data        self._rates = rates        self._categoriser = categoriser        self._categorised_data = None    def categorised_boq(self):        if self._categorised_data is None:            self._categorised_data = [                Item(row["Size"], row["Count"], row["Area"], row["Surface Area"], self._categoriser())                for _, row in self._data.iterrows()            ]        return self._categorised_data    def summarised_boq(self):        summarised_boq = {}        for item in self.categorised_boq():            summarised_boq.setdefault(item.category, 0)            summarised_boq[item.category] += item.count * item.boq_area        return summarised_boq